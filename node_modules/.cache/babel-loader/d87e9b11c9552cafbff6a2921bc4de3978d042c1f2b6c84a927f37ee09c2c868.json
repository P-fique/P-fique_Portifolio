{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\Honore\\\\react-portifolio\\\\src\\\\components\\\\portifolio\\\\Works.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { projectsData } from './Data';\nimport { projectsNav } from './Data';\nimport WorkItems from './WorkItems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Works = () => {\n  _s();\n  const [item, setItem] = useState({\n    name: \"all\"\n  });\n  const [projects, setProjects] = useState([]);\n  const [active, setActive] = useState(0);\n  useEffect(() => {\n    if (item.name === \"all\") {\n      setProjects(projectsData);\n    } else {\n      const newProjects = projectsData.filter(project => {\n        return project.category === item.name;\n      });\n      setProjects(newProjects);\n    }\n  }, [item]);\n  const handleClick = (e, index) => {\n    setItem({\n      name: e.target.textContent\n    });\n    setActive(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__filters\",\n      children: projectsNav.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => {\n            handleClick(e, index);\n          },\n          className: `${active === index ? 'active-work' : ''}work__item`,\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__container container grid\",\n      children: projects.map(item => {\n        return /*#__PURE__*/_jsxDEV(WorkItems, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Works, \"y54vauGwoVCNyZi94rqYZEjX2TM=\");\n_c = Works;\nexport default Works;\nvar _c;\n$RefreshReg$(_c, \"Works\");","map":{"version":3,"names":["React","useState","useEffect","projectsData","projectsNav","WorkItems","Works","item","setItem","name","projects","setProjects","active","setActive","newProjects","filter","project","category","handleClick","e","index","target","textContent","map","id"],"sources":["C:/Users/Hp/Desktop/Honore/react-portifolio/src/components/portifolio/Works.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"; \r\nimport { projectsData } from './Data'\r\nimport { projectsNav } from './Data'\r\nimport WorkItems from './WorkItems'\r\nconst Works = () => {\r\n    const [item, setItem] = useState({name : \"all\"});\r\n    const [projects, setProjects] = useState([]);\r\n    const [active, setActive] = useState(0);\r\n    useEffect(() => {\r\n       if(item.name === \"all\") {\r\n        setProjects(projectsData);\r\n       } \r\n       else {\r\n        const newProjects = projectsData.filter((project) => {\r\n            return project.category === item.name;\r\n        });\r\n        setProjects(newProjects);\r\n       }\r\n    }, [item]);\r\n\r\n    const handleClick = (e, index) => {\r\n        setItem({ name: e.target.textContent });\r\n        setActive(index);\r\n    }\r\n  return (\r\n    <div>\r\n        <div className=\"work__filters\">\r\n        {projectsNav.map((item, index) => {\r\n            return (<span \r\n            onClick={(e) => {\r\n                handleClick(e, index);\r\n            }}\r\n            className={`${active === index ? 'active-work' :  ''}work__item`}\r\n            key={index}>\r\n                {item.name}\r\n            </span>\r\n            );\r\n        })}\r\n    </div>\r\n    <div className=\"work__container container grid\">\r\n       {projects.map((item) => {\r\n        return <WorkItems item={item} key={item.id}/>\r\n       })} \r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Works"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,QAAQ;AACrC,SAASC,WAAW,QAAQ,QAAQ;AACpC,OAAOC,SAAS,MAAM,aAAa;AAAA;AACnC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAACQ,IAAI,EAAG;EAAK,CAAC,CAAC;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvCC,SAAS,CAAC,MAAM;IACb,IAAGK,IAAI,CAACE,IAAI,KAAK,KAAK,EAAE;MACvBE,WAAW,CAACR,YAAY,CAAC;IAC1B,CAAC,MACI;MACJ,MAAMW,WAAW,GAAGX,YAAY,CAACY,MAAM,CAAEC,OAAO,IAAK;QACjD,OAAOA,OAAO,CAACC,QAAQ,KAAKV,IAAI,CAACE,IAAI;MACzC,CAAC,CAAC;MACFE,WAAW,CAACG,WAAW,CAAC;IACzB;EACH,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,MAAMW,WAAW,GAAG,CAACC,CAAC,EAAEC,KAAK,KAAK;IAC9BZ,OAAO,CAAC;MAAEC,IAAI,EAAEU,CAAC,CAACE,MAAM,CAACC;IAAY,CAAC,CAAC;IACvCT,SAAS,CAACO,KAAK,CAAC;EACpB,CAAC;EACH,oBACE;IAAA,wBACI;MAAK,SAAS,EAAC,eAAe;MAAA,UAC7BhB,WAAW,CAACmB,GAAG,CAAC,CAAChB,IAAI,EAAEa,KAAK,KAAK;QAC9B,oBAAQ;UACR,OAAO,EAAGD,CAAC,IAAK;YACZD,WAAW,CAACC,CAAC,EAAEC,KAAK,CAAC;UACzB,CAAE;UACF,SAAS,EAAG,GAAER,MAAM,KAAKQ,KAAK,GAAG,aAAa,GAAI,EAAG,YAAY;UAAA,UAE5Db,IAAI,CAACE;QAAI,GADTW,KAAK;UAAA;UAAA;UAAA;QAAA,QAEH;MAEX,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAK,SAAS,EAAC,gCAAgC;MAAA,UAC3CV,QAAQ,CAACa,GAAG,CAAEhB,IAAI,IAAK;QACvB,oBAAO,QAAC,SAAS;UAAC,IAAI,EAAEA;QAAK,GAAMA,IAAI,CAACiB,EAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAC9C,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEV,CAAC;AAAA,GA1CKlB,KAAK;AAAA,KAALA,KAAK;AA4CX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}